## 가입 [/auth/join]
사용자 가입을 처리합니다.

### 사용자 모델

```js
{
    "_id": String, // 오브젝트 ID
    "type": String, // 사용자 타입
    "name": String, // 이름
    "email": String, // 고유한 이메일
    "password": String, // 해싱된 패스워드
    "photo": String, // 프로필 사진
    "timestamp": Date.now(), // 타임스탬프
    "student": {}, // 디미고 학생 정보
    "inu": Boolean, // INU 동아리원 여부
    "admin": Boolean, // 관리자 여부
}
```

### 사용자 타입

```js
{
    "user": "일반 사용자",
    "dimigo": "디미고 학생",
}
```

### 디미고 학생 정보 모델

```js
{
    "id": String,
    "grade": Number,
    "klass": Number,
    "number": Number,
    "serial": String,
}
```

- 디미고 API에서 학생 정보를 받아 저장
- 이때 이름, (중복 검사 뒤) 이메일, 프로필 사진도 연결

### 일반 사용자 가입 [POST]

+ Request
    
    + Body

            {
                "user": {
                    "type": "user",
                    "name": String,
                    "email": String,
                    "password": String,
                    "photo": String, // nullable
                }
            }

+ Response 200 (application/json)

    + Body

            {
                "id": String, // 생성된 사용자의 오브젝트 ID
            }

### 디미고 학생 가입 [POST]

+ Request
    
    + Body

            {
                "user": {
                    "type": "dimigo",
                    "id": String, // 디미고 계정 아이디
                    "password": String, // 디미고 계정 패스워드
                }
            }

+ Response 200 (application/json)

    + Body

            {
                "id": String, // 생성된 사용자의 오브젝트 ID
            }

## 로그인 [/auth/login]
사용자 이메일과 패스워드로 액세스 토큰을 발급합니다.

### 사용자 로그인 [POST]

+ Request
    
    + Body

            {
                "email": String,
                "password": String,
            }

+ Response 200 (application/json)

    + Body

            {
                "id": String,
                "token": String,
            }

### 디미고 계정으로 로그인[POST]
- 디미고 계정으로 간편 로그인 및 가입

## 계정 연결 [/auth/migrate]
일반 사용자 계정을 디미고 계정과 연결해, 학생 정보를 가져옵니다.

### 페이로드 모델

```js
{
    "id": String, // 디미고 계정 아이디
    "password": String, // 디미고 계정 패스워드
}
```

### 디미고 계정 연결 [POST]

## 권한 [/auth/assign]
기존 사용자의 권한을 상향합니다. 현재 사용자가 관리자 권한일 때만 이용할 수 있습니다.

### 페이로드 모델

```js
{
    "id": String, // 권한을 부여할 사용자의 오브젝트 ID
    "type": String, // 부여할 권한
}
```

### 권한 타입

```js
{
    "admin": "관리자", // INU 동아리원인 사용자에게만 부여 가능
    "inu": "INU 동아리원", // 디미고 학생 타입인 사용자에게만 부여 가능
}
```

### INU 동아리원 권한 부여 [POST]
### INU 동아리원 권한 삭제 [DELETE]
### 관리자 권한 부여 [POST]
### 관리자 권한 삭제 [DELETE]
